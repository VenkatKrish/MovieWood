//
// DashboardControllerAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class DashboardControllerAPI {
    /**
     getGenre
     
     - parameter dashId: (path) dashId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getGenreUsingGET(dashId: Int64, completion: @escaping ((_ data: QuickDashboard?,_ error: Error?) -> Void)) {
        getGenreUsingGETWithRequestBuilder(dashId: dashId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     getGenre
     - GET /api/v1/dashboard/{dashId}
     - examples: [{output=none}]
     
     - parameter dashId: (path) dashId 

     - returns: RequestBuilder<QuickDashboard> 
     */
    open class func getGenreUsingGETWithRequestBuilder(dashId: Int64) -> RequestBuilder<QuickDashboard> {
        var path = "/api/v1/dashboard/{dashId}"
        let dashIdPreEscape = "\(dashId)"
        let dashIdPostEscape = dashIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{dashId}", with: dashIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<QuickDashboard>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
