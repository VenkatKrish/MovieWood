//
// MovieCouponControllerAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class MovieCouponControllerAPI {
    /**
     all
     
     - parameter offset: (query)  (optional)
     - parameter pageNumber: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter paged: (query)  (optional)
     - parameter sortSorted: (query)  (optional)
     - parameter sortUnsorted: (query)  (optional)
     - parameter unpaged: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func allUsingGET12(offset: Int64? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, paged: Bool? = nil, sortSorted: Bool? = nil, sortUnsorted: Bool? = nil, unpaged: Bool? = nil, completion: @escaping ((_ data: PageMovieCoupons?,_ error: Error?) -> Void)) {
        allUsingGET12WithRequestBuilder(offset: offset, pageNumber: pageNumber, pageSize: pageSize, paged: paged, sortSorted: sortSorted, sortUnsorted: sortUnsorted, unpaged: unpaged).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     all
     - GET /api/v1/getallmoviecoupons
     - examples: [{output=none}]
     
     - parameter offset: (query)  (optional)
     - parameter pageNumber: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter paged: (query)  (optional)
     - parameter sortSorted: (query)  (optional)
     - parameter sortUnsorted: (query)  (optional)
     - parameter unpaged: (query)  (optional)

     - returns: RequestBuilder<PageMovieCoupons> 
     */
    open class func allUsingGET12WithRequestBuilder(offset: Int64? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, paged: Bool? = nil, sortSorted: Bool? = nil, sortUnsorted: Bool? = nil, unpaged: Bool? = nil) -> RequestBuilder<PageMovieCoupons> {
        let path = "/api/v1/getallmoviecoupons"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "offset": offset?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "paged": paged, 
            "sort.sorted": sortSorted, 
            "sort.unsorted": sortUnsorted, 
            "unpaged": unpaged
        ])

        let requestBuilder: RequestBuilder<PageMovieCoupons>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     deleteMovieCoupon
     
     - parameter movieCouponId: (path) movieCouponId 
     - parameter movieId: (path) movieId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteMovieCouponUsingDELETE(movieCouponId: Int64, movieId: Int64, completion: @escaping ((_ data: JSONValue?,_ error: Error?) -> Void)) {
        deleteMovieCouponUsingDELETEWithRequestBuilder(movieCouponId: movieCouponId, movieId: movieId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     deleteMovieCoupon
     - DELETE /api/v1/movie/{movieId}/moviecoupons/{movieCouponId}
     - examples: [{output=none}]
     
     - parameter movieCouponId: (path) movieCouponId 
     - parameter movieId: (path) movieId 

     - returns: RequestBuilder<JSONValue> 
     */
    open class func deleteMovieCouponUsingDELETEWithRequestBuilder(movieCouponId: Int64, movieId: Int64) -> RequestBuilder<JSONValue> {
        var path = "/api/v1/movie/{movieId}/moviecoupons/{movieCouponId}"
        let movieCouponIdPreEscape = "\(movieCouponId)"
        let movieCouponIdPostEscape = movieCouponIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{movieCouponId}", with: movieCouponIdPostEscape, options: .literal, range: nil)
        let movieIdPreEscape = "\(movieId)"
        let movieIdPostEscape = movieIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{movieId}", with: movieIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<JSONValue>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     movieCouponsByMovie
     
     - parameter movieId: (path) movieId 
     - parameter offset: (query)  (optional)
     - parameter pageNumber: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter paged: (query)  (optional)
     - parameter sortSorted: (query)  (optional)
     - parameter sortUnsorted: (query)  (optional)
     - parameter unpaged: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func movieCouponsByMovieUsingGET(movieId: Int64, offset: Int64? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, paged: Bool? = nil, sortSorted: Bool? = nil, sortUnsorted: Bool? = nil, unpaged: Bool? = nil, completion: @escaping ((_ data: PageMovieCoupons?,_ error: Error?) -> Void)) {
        movieCouponsByMovieUsingGETWithRequestBuilder(movieId: movieId, offset: offset, pageNumber: pageNumber, pageSize: pageSize, paged: paged, sortSorted: sortSorted, sortUnsorted: sortUnsorted, unpaged: unpaged).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     movieCouponsByMovie
     - GET /api/v1/moviecouponsbymovie/{movieId}
     - examples: [{output=none}]
     
     - parameter movieId: (path) movieId 
     - parameter offset: (query)  (optional)
     - parameter pageNumber: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter paged: (query)  (optional)
     - parameter sortSorted: (query)  (optional)
     - parameter sortUnsorted: (query)  (optional)
     - parameter unpaged: (query)  (optional)

     - returns: RequestBuilder<PageMovieCoupons> 
     */
    open class func movieCouponsByMovieUsingGETWithRequestBuilder(movieId: Int64, offset: Int64? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, paged: Bool? = nil, sortSorted: Bool? = nil, sortUnsorted: Bool? = nil, unpaged: Bool? = nil) -> RequestBuilder<PageMovieCoupons> {
        var path = "/api/v1/moviecouponsbymovie/{movieId}"
        let movieIdPreEscape = "\(movieId)"
        let movieIdPostEscape = movieIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{movieId}", with: movieIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "offset": offset?.encodeToJSON(), 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON(), 
            "paged": paged, 
            "sort.sorted": sortSorted, 
            "sort.unsorted": sortUnsorted, 
            "unpaged": unpaged
        ])

        let requestBuilder: RequestBuilder<PageMovieCoupons>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     saveMovieCoupon
     
     - parameter movieCoupon: (body) movieCoupon 
     - parameter movieId: (path) movieId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func saveMovieCouponUsingPOST(movieCoupon: MovieCoupons, movieId: Int64, completion: @escaping ((_ data: JSONValue?,_ error: Error?) -> Void)) {
        saveMovieCouponUsingPOSTWithRequestBuilder(movieCoupon: movieCoupon, movieId: movieId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     saveMovieCoupon
     - POST /api/v1/movie/{movieId}/moviecoupons
     - examples: [{output=none}]
     
     - parameter movieCoupon: (body) movieCoupon 
     - parameter movieId: (path) movieId 

     - returns: RequestBuilder<JSONValue> 
     */
    open class func saveMovieCouponUsingPOSTWithRequestBuilder(movieCoupon: MovieCoupons, movieId: Int64) -> RequestBuilder<JSONValue> {
        var path = "/api/v1/movie/{movieId}/moviecoupons"
        let movieIdPreEscape = "\(movieId)"
        let movieIdPostEscape = movieIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{movieId}", with: movieIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: movieCoupon)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<JSONValue>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     updateMovieCoupon
     
     - parameter movieCoupon: (body) movieCoupon 
     - parameter movieCouponId: (path) movieCouponId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateMovieCouponUsingPUT(movieCoupon: MovieCoupons, movieCouponId: Int64, completion: @escaping ((_ data: JSONValue?,_ error: Error?) -> Void)) {
        updateMovieCouponUsingPUTWithRequestBuilder(movieCoupon: movieCoupon, movieCouponId: movieCouponId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     updateMovieCoupon
     - PUT /api/v1/moviecoupons/{movieCouponId}
     - examples: [{output=none}]
     
     - parameter movieCoupon: (body) movieCoupon 
     - parameter movieCouponId: (path) movieCouponId 

     - returns: RequestBuilder<JSONValue> 
     */
    open class func updateMovieCouponUsingPUTWithRequestBuilder(movieCoupon: MovieCoupons, movieCouponId: Int64) -> RequestBuilder<JSONValue> {
        var path = "/api/v1/moviecoupons/{movieCouponId}"
        let movieCouponIdPreEscape = "\(movieCouponId)"
        let movieCouponIdPostEscape = movieCouponIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{movieCouponId}", with: movieCouponIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: movieCoupon)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<JSONValue>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     validateMovieCoupon
     
     - parameter movieCouponValidateRequest: (body) movieCouponValidateRequest 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func validateMovieCouponUsingPOST(movieCouponValidateRequest: MovieCouponValidateRequest, completion: @escaping ((_ data: JSONValue?,_ error: Error?) -> Void)) {
        validateMovieCouponUsingPOSTWithRequestBuilder(movieCouponValidateRequest: movieCouponValidateRequest).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     validateMovieCoupon
     - POST /api/v1/validatemoviecoupon
     - examples: [{output=none}]
     
     - parameter movieCouponValidateRequest: (body) movieCouponValidateRequest 

     - returns: RequestBuilder<JSONValue> 
     */
    open class func validateMovieCouponUsingPOSTWithRequestBuilder(movieCouponValidateRequest: MovieCouponValidateRequest) -> RequestBuilder<JSONValue> {
        let path = "/api/v1/validatemoviecoupon"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: movieCouponValidateRequest)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<JSONValue>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
