//
// OrdersAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class OrdersAPI {
    /**
     Adv Search Orders

     - parameter search: (query)  
     - parameter page: (query)  
     - parameter size: (query)  
     - parameter contentType: (header)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func advSearchOrders(search: String, page: Decimal, size: Decimal, contentType: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        advSearchOrdersWithRequestBuilder(search: search, page: page, size: size, contentType: contentType).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Adv Search Orders
     - GET /cholaottservice/api/v1/searchorders
     - 

     - parameter search: (query)  
     - parameter page: (query)  
     - parameter size: (query)  
     - parameter contentType: (header)  

     - returns: RequestBuilder<Void> 
     */
    open class func advSearchOrdersWithRequestBuilder(search: String, page: Decimal, size: Decimal, contentType: String) -> RequestBuilder<Void> {
        let path = "/cholaottservice/api/v1/searchorders"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "search": search, 
                        "page": page, 
                        "size": size
        ])
        let nillableHeaders: [String: Any?] = [
                        "Content-Type": contentType
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     Adv Search Orders Copy

     - parameter body: (body)  
     - parameter contentType: (header)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func advSearchOrdersCopy(body: String, contentType: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        advSearchOrdersCopyWithRequestBuilder(body: body, contentType: contentType).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Adv Search Orders Copy
     - POST /cholaottservice/api/v1/charts/paidordersbymovie
     - 

     - parameter body: (body)  
     - parameter contentType: (header)  

     - returns: RequestBuilder<Void> 
     */
    open class func advSearchOrdersCopyWithRequestBuilder(body: String, contentType: String) -> RequestBuilder<Void> {
        let path = "/cholaottservice/api/v1/charts/paidordersbymovie"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
                        "Content-Type": contentType
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }
    /**
     All Movie Orders for User

     - parameter contentType: (header)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func allMovieOrdersforUser(contentType: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        allMovieOrdersforUserWithRequestBuilder(contentType: contentType).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     All Movie Orders for User
     - GET /cholaottservice/api/v1/getmovieorders
     - 

     - parameter contentType: (header)  

     - returns: RequestBuilder<Void> 
     */
    open class func allMovieOrdersforUserWithRequestBuilder(contentType: String) -> RequestBuilder<Void> {
        let path = "/cholaottservice/api/v1/getmovieorders"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
                        "Content-Type": contentType
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     Create Movie Order

     - parameter body: (body)  
     - parameter contentType: (header)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createMovieOrder(body: String, contentType: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        createMovieOrderWithRequestBuilder(body: body, contentType: contentType).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Create Movie Order
     - POST /cholaottservice/api/v1/movie/2/orders
     - 

     - parameter body: (body)  
     - parameter contentType: (header)  

     - returns: RequestBuilder<Void> 
     */
    open class func createMovieOrderWithRequestBuilder(body: String, contentType: String) -> RequestBuilder<Void> {
        let path = "/cholaottservice/api/v1/movie/2/orders"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
                        "Content-Type": contentType
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }
    /**
     Create Subscription Order

     - parameter body: (body)  
     - parameter contentType: (header)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createSubscriptionOrder(body: String, contentType: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        createSubscriptionOrderWithRequestBuilder(body: body, contentType: contentType).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Create Subscription Order
     - POST /cholaottservice/api/v1/movie/0/orders
     - 

     - parameter body: (body)  
     - parameter contentType: (header)  

     - returns: RequestBuilder<Void> 
     */
    open class func createSubscriptionOrderWithRequestBuilder(body: String, contentType: String) -> RequestBuilder<Void> {
        let path = "/cholaottservice/api/v1/movie/0/orders"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
                        "Content-Type": contentType
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }
    /**
     Movie Order

     - parameter contentType: (header)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func movieOrder(contentType: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        movieOrderWithRequestBuilder(contentType: contentType).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Movie Order
     - GET /cholaottservice/api/v1/orders/movie/16
     - 

     - parameter contentType: (header)  

     - returns: RequestBuilder<Void> 
     */
    open class func movieOrderWithRequestBuilder(contentType: String) -> RequestBuilder<Void> {
        let path = "/cholaottservice/api/v1/orders/movie/16"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
                        "Content-Type": contentType
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     Movie Order Update

     - parameter body: (body)  
     - parameter contentType: (header)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func movieOrderUpdate(body: String, contentType: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        movieOrderUpdateWithRequestBuilder(body: body, contentType: contentType).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Movie Order Update
     - PUT /cholaottservice/api/v1/orders/3463
     - 

     - parameter body: (body)  
     - parameter contentType: (header)  

     - returns: RequestBuilder<Void> 
     */
    open class func movieOrderUpdateWithRequestBuilder(body: String, contentType: String) -> RequestBuilder<Void> {
        let path = "/cholaottservice/api/v1/orders/3463"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
                        "Content-Type": contentType
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }
    /**
     Movie Order by ID

     - parameter contentType: (header)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func movieOrderbyID(contentType: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        movieOrderbyIDWithRequestBuilder(contentType: contentType).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Movie Order by ID
     - GET /cholaottservice/api/v1/orders/1
     - 

     - parameter contentType: (header)  

     - returns: RequestBuilder<Void> 
     */
    open class func movieOrderbyIDWithRequestBuilder(contentType: String) -> RequestBuilder<Void> {
        let path = "/cholaottservice/api/v1/orders/1"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
                        "Content-Type": contentType
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }
    /**
     Razor Pay Hook

     - parameter body: (body)  
     - parameter contentType: (header)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func razorPayHook(body: String, contentType: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        razorPayHookWithRequestBuilder(body: body, contentType: contentType).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Razor Pay Hook
     - POST /cholaottservice/api/v1/public/razororderpaymentconfirmation
     - 

     - parameter body: (body)  
     - parameter contentType: (header)  

     - returns: RequestBuilder<Void> 
     */
    open class func razorPayHookWithRequestBuilder(body: String, contentType: String) -> RequestBuilder<Void> {
        let path = "/cholaottservice/api/v1/public/razororderpaymentconfirmation"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
                        "Content-Type": contentType
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }
}
